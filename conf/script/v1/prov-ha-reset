#!/usr/bin/env bash

# Copyright (c) 2020 Seagate Technology LLC and/or its Affiliates
#
# This program is free software: you can redistribute it and/or modify it under the
# terms of the GNU Affero General Public License as published by the Free Software
# Foundation, either version 3 of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful, but WITHOUT ANY
# WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE. See the GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License along
# with this program. If not, see <https://www.gnu.org/licenses/>. For any questions
# about this software or licensing, please email opensource@seagate.com or
# cortx-questions@seagate.com.

set -eu -o pipefail
export PS4='+ [${BASH_SOURCE[0]##*/}:${LINENO}${FUNCNAME[0]:+:${FUNCNAME[0]}}] '
# set -x

log_file=${PROV_HA_RESET_LOG_FILE:-/var/log/cortx-ha.log}
exec &>> $log_file
exec &> >(stdbuf -oL gawk '{ print strftime("%Y-%m-%d %H:%M:%S"), $0 }')

log() {
    logger --stderr --tag prov-ha-reset "$*"
}
log "****************************************************************"
log "${0##*/}"
log "****************************************************************"



hare_dir=/var/lib/hare

count_s3servers() {
    local conf=$1
    if [[ -f $conf ]]; then
        jq -r '.services[] | "\(.name)"' $conf | grep -c '^s3service$'
    else
        echo 0  # XXX-TODO: parse `pcs status` output
    fi
}

log "Deleting pcs resources for s3server "
for ctrl in c2 c1; do
    conf_dir=consul-server-$ctrl-conf
    for i in $(seq 1 \
                   $(count_s3servers "$hare_dir/$conf_dir/$conf_dir.json")); do
        pcs resource delete s3server-$ctrl-$i || true
    done
done

resources=(
    s3backcons-c{2,1}
    s3backprod
    haproxy-c{2,1}
    statsd
    els-search
    s3auth
    ldap
    rabbitmq
    motr-free-space-mon
    c{2,1}
    motr-kernel
    lnet
    ip-c{2,1}
)
log "Deleting pcs resources for s3 "
for r in ${resources[@]}; do
    pcs resource delete $r || true
done

while mountpoint /var/motr2 && ! umount /var/motr2; do sleep 1; done
while mountpoint /var/motr1 && ! umount /var/motr1; do sleep 1; done
