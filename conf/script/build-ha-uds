#!/bin/bash

# Copyright (c) 2020 Seagate Technology LLC and/or its Affiliates
#
# This program is free software: you can redistribute it and/or modify it under the
# terms of the GNU Affero General Public License as published by the Free Software
# Foundation, either version 3 of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful, but WITHOUT ANY
# WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE. See the GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License along
# with this program. If not, see <https://www.gnu.org/licenses/>. For any questions
# about this software or licensing, please email opensource@seagate.com or
# cortx-questions@seagate.com.

set -eu -o pipefail
export PS4='+ [${BASH_SOURCE[0]##*/}:${LINENO}${FUNCNAME[0]:+:${FUNCNAME[0]}}] '
# set -x

PROG=${0##*/}

usage() {
    cat <<EOF
Usage: $PROG [OPTS]

Configures UDS HA by adding resources to Pacemaker.

Caveats:

* The script expects that 'csm-agent' resource is added to Pacemaker.
  Check with 'pcs status'.

Optional parameters:
  --cib-file            Pacemaker configuration file.
  --update              Preserve Consul and Motr state, reconfigure Pacemaker only.

EOF
}

TEMP=$(getopt --options h,i: \
              --longoptions help,cib-file:,update \
              --name "$PROG" -- "$@" || true)

(($? == 0)) || { usage >&2; exit 1; }

eval set -- "$TEMP"

update=false
cib_file=/var/lib/hare/cib_cortx_cluster.xml

while true; do
    case "${1:-default}" in
        -h|--help)     usage; exit ;;
        --cib-file)    cib_file=$2; shift 2 ;;
        --update)      update=true; shift 2 ;;
        --)            shift; break ;;
        *)             break ;;
    esac
done

precheck() {
    # Abort (set -e) if `csm-agent` resource does not exist.
    sudo pcs resource show csm-agent >/dev/null
}

uds_rsc_add() {
    echo 'Adding UDS resource and constraints...'
    sudo pcs -f $cib_file resource create uds systemd:uds op monitor interval=30s
    sudo pcs -f $cib_file constraint colocation add uds with csm-agent score=INFINITY

    # According to EOS-9258, there is a bug which requires UDS to be started after csm_agent
    sudo pcs -f $cib_file constraint order csm-agent then uds
}

cib_init() {
   sudo pcs cluster cib $cib_file
}

cib_commit() {
    sudo pcs cluster cib-push $cib_file --config
}

# HA operations table.
ha_ops=(
    precheck
    uds_rsc_add
)

# Maps ha operation from the ha_ops table to its respective type.
# HA operations are classified and described as follows,
# bootstrap:   executes during clean installation of the software only
# update:      executes during clean install and software update
declare -A ha_ops_type=(
    [precheck]='bootstrap'
    [uds_rsc_add]='update'
)

for op in ${ha_ops[@]}; do
    if ! $update; then
        cib_init
        $op
        cib_commit
    elif [[ ${ha_ops_type[$op]} == 'update' ]]; then
        # We are using existing CIB as a base and re-applying the pcs
        # instructions, thus some instructions would already exist in the
        # CIB, we ignore them.
        $op || true
    fi
done
