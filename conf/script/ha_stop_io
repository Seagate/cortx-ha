#!/bin/bash

# Copyright (c) 2021 Seagate Technology LLC and/or its Affiliates
#
# This program is free software: you can redistribute it and/or modify it under the
# terms of the GNU Affero General Public License as published by the Free Software
# Foundation, either version 3 of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful, but WITHOUT ANY
# WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE. See the GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License along
# with this program. If not, see <https://www.gnu.org/licenses/>. For any questions
# about this software or licensing, please email opensource@seagate.com or
# cortx-questions@seagate.com.

HA_LOG="/var/log/seagate/cortx/ha"

# Extract all keys matching to STR from consul
# parse these keys and find those that contain the string stop_io
# Modify stop_io to stop_io_success in all matching consul keys
# disable pcs resources lnet-c1 and lnet-c2

STR="cortx/base/ha/obj/node/"

# Add Log
mkdir -p "${HA_LOG}"/
exec &>> "${HA_LOG}"/${0##*/}.log
exec &> >(stdbuf -oL gawk '{ print strftime("%Y-%m-%d %H:%M:%S"), $0 }')

OUTPUT_ALL=$( consul kv get -recurse $STR )

#Log consul keys for debugging
echo "Current consul keys matching the defined keyprefix are :"
echo "$OUTPUT_ALL"
echo ""

STOP_IO="false"

IFS=$'\n' list=($OUTPUT_ALL)
for item in "${list[@]}"
do
  if [ `echo $item| grep -c "\"action\": \"stop_io\"" ` -gt 0 ]
  then

    # disable lnet resources
    if [ "$STOP_IO" = "false" ]; then
      STOP_IO="true"

      #execute resource stop
      pcs status
      pcs resource disable lnet-c1 lnet-c2
      echo "Data Integrity check failure; Resource disable in progress for lnet-c1, lnet-c2 and its dependencies."
      pcs status

    fi

    echo "Replacing stop_io with stop_io_success in "
    echo "$item"

    # get the key, value, replace stop_io with stop_io_success and write back to consul
    key="$( cut -d ':' -f 1 <<< "$item" )";
    value=$( consul kv get $key )
    modified_val=${value/stop_io/stop_io_success}

    consul kv put $key $modified_val

  fi

done
